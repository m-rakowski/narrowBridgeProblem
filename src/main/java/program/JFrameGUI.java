package program;/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import javax.swing.*;
import java.io.*;

/**
 * @author Student-PL
 */
public class JFrameGUI extends javax.swing.JFrame {

    public Thread exampleT = new Thread(new Runnable() {
        public void run() {
            while (true) {
                SwingUtilities.invokeLater(() -> switchLights());
                try {
                    exampleT.sleep(1000*Integer.parseInt(Utils.loadFromPropertiesFile("LIGHTS_CHANGE_EVERY_X_SECONDS")));

                } catch (InterruptedException e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                }
            }
        }
    });

    /**
     * Creates new form threads.program.JFrameGUI
     */
    public JFrameGUI() {
        initComponents();

        String path_to_config_file = Utils.loadFromPropertiesFile("PATH_TO_CONFIG");

        loadNumberOfCarsFromFile(path_to_config_file);
    }

    private void loadNumberOfCarsFromFile(String path) {
        String[] records = new String[20];

        try {
            BufferedReader reader = new BufferedReader(new FileReader(path));
            String line;
            for (int i = 0; (line = reader.readLine()) != null; i++) {
                records[i] = line;
            }
            reader.close();
        } catch (Exception e) {
            System.err.format("Exception occurred trying to read '%s'.", path);
            e.printStackTrace();
            throw new IllegalArgumentException();
        }

        numberOfCarsNorthLabel.setText(records[0]);
        numberOfCarsSouthLabel.setText(records[1]);

        if ("North Green and South Red".equals(records[2])) {
            northernTrafficLight.setBackground(new java.awt.Color(51, 255, 51));
            southernTrafficLight.setBackground(new java.awt.Color(255, 51, 51));
        } else if ("North Red and South Green".equals(records[2])) {
            northernTrafficLight.setBackground(new java.awt.Color(255, 51, 51));
            southernTrafficLight.setBackground(new java.awt.Color(51, 255, 51));
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        numberOfCarsSouthLabel = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        numberOfCarsNorthLabel = new javax.swing.JLabel();
        addCarsSouthButton = new javax.swing.JButton();
        addCarsNorthButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        numberOfCarsToBeAddedEditBox = new javax.swing.JTextField();
        northOrSouthMenu = new javax.swing.JComboBox<>();
        addCarsButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        northernTrafficLight = new javax.swing.JPanel();
        southernTrafficLight = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        numberOfCarsSouthLabel.setText("0 cars");
        getContentPane().add(numberOfCarsSouthLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 220, -1, -1));

        jPanel2.setBackground(new java.awt.Color(153, 153, 153));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 30, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 100, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 110, -1, -1));

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 410, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 40, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 410, 40));

        numberOfCarsNorthLabel.setText("0 cars");
        getContentPane().add(numberOfCarsNorthLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 80, -1, -1));

        addCarsSouthButton.setText("Add 10 cars to queue");
        addCarsSouthButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCarsSouthButtonActionPerformed(evt);
            }
        });
        getContentPane().add(addCarsSouthButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 280, -1, -1));

        addCarsNorthButton.setText("Add 10 cars to queue");
        addCarsNorthButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCarsNorthButtonActionPerformed(evt);
            }
        });
        getContentPane().add(addCarsNorthButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 30, -1, -1));

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        numberOfCarsToBeAddedEditBox.setText("0");
        numberOfCarsToBeAddedEditBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numberOfCarsToBeAddedEditBoxActionPerformed(evt);
            }
        });

        northOrSouthMenu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"North", "South"}));
        northOrSouthMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                northOrSouthMenuActionPerformed(evt);
            }
        });

        addCarsButton.setText("Add cars");
        addCarsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCarsButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("Add n cars to North/South");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(addCarsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                                .addComponent(numberOfCarsToBeAddedEditBox)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(northOrSouthMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(numberOfCarsToBeAddedEditBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(northOrSouthMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(addCarsButton)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 20, 170, 110));

        jLabel4.setText("South");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 280, -1, -1));

        jLabel5.setText("North");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, -1, -1));

        northernTrafficLight.setBackground(new java.awt.Color(255, 51, 51));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(northernTrafficLight);
        northernTrafficLight.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 20, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 20, Short.MAX_VALUE)
        );

        getContentPane().add(northernTrafficLight, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 110, 20, 20));

        southernTrafficLight.setBackground(new java.awt.Color(51, 255, 51));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(southernTrafficLight);
        southernTrafficLight.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
                jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 20, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
                jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 20, Short.MAX_VALUE)
        );

        getContentPane().add(southernTrafficLight, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 200, 20, 20));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addCarsSouthButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCarsSouthButtonActionPerformed
        System.out.println("10 cars added to South");

        int newNumberOfCars = Integer.parseInt(numberOfCarsSouthLabel.getText().split(" ")[0]) + 10;

        numberOfCarsSouthLabel.setText(Integer.toString(newNumberOfCars) + " cars");
    }//GEN-LAST:event_addCarsSouthButtonActionPerformed

    private void addCarsNorthButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCarsNorthButtonActionPerformed
        System.out.println("10 cars added to North");

        int newNumberOfCars = Integer.parseInt(numberOfCarsNorthLabel.getText().split(" ")[0]) + 10;

        numberOfCarsNorthLabel.setText(Integer.toString(newNumberOfCars) + " cars");
    }//GEN-LAST:event_addCarsNorthButtonActionPerformed

    private void numberOfCarsToBeAddedEditBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numberOfCarsToBeAddedEditBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numberOfCarsToBeAddedEditBoxActionPerformed

    private void addCarsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCarsButtonActionPerformed

        //TODO VALIDATE THE INPUTS!!
        int numberOfCarsToBeAdded = Integer.parseInt(numberOfCarsToBeAddedEditBox.getText());


        System.out.println(numberOfCarsToBeAdded);

        if ("North".equals(northOrSouthMenu.getModel().getSelectedItem())) {
            int newNumberOfCars = Integer.parseInt(numberOfCarsNorthLabel.getText().split(" ")[0]) + numberOfCarsToBeAdded;
            numberOfCarsNorthLabel.setText(Integer.toString(newNumberOfCars) + " cars");
        } else if ("South".equals(northOrSouthMenu.getModel().getSelectedItem())) {
            int newNumberOfCars = Integer.parseInt(numberOfCarsSouthLabel.getText().split(" ")[0]) + numberOfCarsToBeAdded;
            numberOfCarsSouthLabel.setText(Integer.toString(newNumberOfCars) + " cars");
        } else {
            throw new IllegalArgumentException("No such option/ illegal option");
        }

    }//GEN-LAST:event_addCarsButtonActionPerformed

    private void northOrSouthMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_northOrSouthMenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_northOrSouthMenuActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCarsButton;
    private javax.swing.JButton addCarsNorthButton;
    private javax.swing.JButton addCarsSouthButton;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel northernTrafficLight;
    private javax.swing.JPanel southernTrafficLight;
    private javax.swing.JComboBox<String> northOrSouthMenu;
    private javax.swing.JLabel numberOfCarsNorthLabel;
    private javax.swing.JLabel numberOfCarsSouthLabel;
    private javax.swing.JTextField numberOfCarsToBeAddedEditBox;
    // End of variables declaration//GEN-END:variables


    public void switchLights() {
        System.out.println("Switching lights");
        if (northernTrafficLight.getBackground().equals(new java.awt.Color(51, 255, 51))) {
            northernTrafficLight.setBackground(new java.awt.Color(255, 51, 51));
            southernTrafficLight.setBackground(new java.awt.Color(51, 255, 51));
        } else {
            northernTrafficLight.setBackground(new java.awt.Color(51, 255, 51));
            southernTrafficLight.setBackground(new java.awt.Color(255, 51, 51));
        }
    }

    public boolean northernTrafficLightIsGreen() {
       return northernTrafficLight.getBackground().equals(new java.awt.Color(51, 255, 51));
    }
}
